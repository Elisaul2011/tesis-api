generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aeronave {
  idAeronave   Int        @id @default(autoincrement())
  aeronave     String
  inventarioId Int
  inventario   inventario @relation(fields: [inventarioId], references: [idInventario])
}

model almacenes {
  idAlmacenes Int          @id @default(autoincrement())
  nombre      String
  descripcion String
  pais        String
  ciudad      String
  estado      Int
  inventario  inventario[]
  zona        zona[]
}

model atas {
  IdAta      Int          @id @default(autoincrement())
  CodigoAta  String       @db.VarChar(30)
  NombreATA  String       @db.VarChar(200)
  inventario inventario[]
}

model estado {
  idEstado   Int          @id @default(autoincrement())
  estado     String
  inventario inventario[]
}

model historial {
  idHistorial      Int            @id @default(autoincrement())
  inventarioId     Int
  tipoMovimientoId Int
  fechaMovimiento  DateTime
  inventario       inventario     @relation(fields: [inventarioId], references: [idInventario])
  tipomovimiento   tipomovimiento @relation(fields: [tipoMovimientoId], references: [idTipoMovimiento])
}

model horasmanuales {
  idHorasManuales Int          @id @default(autoincrement())
  fecha           DateTime
  horas           Int
  ciclos          Int
  aterrizajes     Int
  inventario      inventario[]
}

model inspeccion {
  idInspeccion Int        @id @default(autoincrement())
  inventarioId Int
  inventario   inventario @relation(fields: [inventarioId], references: [idInventario])
}

model inventario {
  idInventario          Int                 @id @default(autoincrement())
  almacenesId           Int
  zonaId                Int
  pn                    String
  descripcion           String
  tipoComponenteId      Int
  sn                    String
  cantidad              Int
  lote                  String
  fabricante            String
  estadoId              Int
  shelfLife             DateTime
  order                 String
  ataId                 Int
  horasManualesId       Int
  necesidadesTecnicasId Int
  rolId                 Int
  almacenes             almacenes           @relation(fields: [almacenesId], references: [idAlmacenes])
  atas                  atas                @relation(fields: [ataId], references: [IdAta])
  estado                estado              @relation(fields: [estadoId], references: [idEstado])
  horasmanuales         horasmanuales       @relation(fields: [horasManualesId], references: [idHorasManuales])
  necesidadestecnicas   necesidadestecnicas @relation(fields: [necesidadesTecnicasId], references: [idNecesidadesTecnicas])
  roles                 roles               @relation(fields: [rolId], references: [idRol])
  tipocomponente        tipocomponente      @relation(fields: [tipoComponenteId], references: [idTipoComponente])
  zona                  zona                @relation(fields: [zonaId], references: [idZona])
  
  aeronave              aeronave[]
  historial             historial[]
  inspeccion            inspeccion[]
  reporteshelflife      reporteshelflife[]
  tallerreparacion      tallerreparacion[]
}

model necesidadestecnicas {
  idNecesidadesTecnicas Int          @id @default(autoincrement())
  pn                    String
  descripcion           String
  cantidad              Int
  inventario            inventario[]
}

model ordencompra {
  idOrdenCompra Int      @id @default(autoincrement())
  ordenCompra   String
  Fecha         DateTime
  descripcion   String
  cantidad      Int
  pn            String
  sn            String
  proveedor     String
}

model reporteshelflife {
  idReporteShelfLife Int        @id @default(autoincrement())
  inventarioId       Int
  venceEn            Int
  inventario         inventario @relation(fields: [inventarioId], references: [idInventario])
}

model roles {
  idRol      Int          @id @default(autoincrement())
  rol        String
  inventario inventario[]
  user       user[]
}

model tallerreparacion {
  idTaller     Int        @id @default(autoincrement())
  taller       String
  inventarioId Int
  inventario   inventario @relation(fields: [inventarioId], references: [idInventario])
}

model tipocomponente {
  idTipoComponente Int          @id @default(autoincrement())
  tipoComponente   String
  inventario       inventario[]
}

model tipomovimiento {
  idTipoMovimiento Int         @id @default(autoincrement())
  tipoMovimiento   String
  historial        historial[]
}

model user {
  idUser       Int     @id @default(autoincrement())
  nameUser     String
  lastnameUser String
  rolId        Int
  active       Boolean
  password     String  @db.VarChar(50)
  roles        roles   @relation(fields: [rolId], references: [idRol])
}

model zona {
  idZona          Int          @id @default(autoincrement())
  zona            String
  descripcionZona String
  almacenId       Int
  inventario      inventario[]
  almacenes       almacenes    @relation(fields: [almacenId], references: [idAlmacenes])
}
