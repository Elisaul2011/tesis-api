// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model atas {
  IdAta      Int          @id @default(autoincrement())
  CodigoAta  String       @db.VarChar(30)
  NombreATA  String       @db.VarChar(200)
  inventario inventario[]
}

model roles {
  idRol Int    @id @default(autoincrement())
  rol   String
  // tecnico     String
  // inspector   String
  // almacenista String
  user  user[]
}

model user {
  idUser       Int    @id @default(autoincrement())
  nameUser     String
  lastnameUser String
  rolId        Int
  password     String @db.VarChar(50)
  roles        roles  @relation(fields: [rolId], references: [idRol], map: "User_rolId_fkey")

  @@index([rolId], map: "User_rolId_fkey")
}

model typeComponents {
  idTypeComponents Int          @id @default(autoincrement())
  typeComponent    String
  components       components[]
  inventario       inventario[]
}

model components {
  idComponents     Int            @id @default(autoincrement())
  descripcion      String
  fabricante       String
  sn               Int
  lote             Int
  idTypeComponents Int
  typeComponents   typeComponents @relation(fields: [idTypeComponents], references: [idTypeComponents])
  idLote           Int
  lotes            lotes          @relation(fields: [idLote], references: [idLotes])
}

model lotes {
  idLotes    Int          @id @default(autoincrement())
  codigo     Int
  componente components[]
  inventario inventario[]
}

model estado {
  idEstado   Int          @id @default(autoincrement())
  estado     String
  // serviciables     String
  // esperaInspeccion String
  // cuarentena       String
  // prestamo         String
  inventario inventario[]
}

model tipoAlmacen {
  idTipoAlmacen Int          @id @default(autoincrement())
  tipoAlmacen   String
  // aeronave         String
  // tallerReparacion String
  inventario    inventario[]
}

model almacenes {
  idAlmacenes Int          @id @default(autoincrement())
  nombre      String
  idPais      Int
  pais        pais         @relation(fields: [idPais], references: [idPais])
  idCiudad    Int
  ciudad      ciudad       @relation(fields: [idCiudad], references: [idCiudad])
  inventario  inventario[]
}

model ciudad {
  idCiudad     Int       @id @default(autoincrement())
  idPais       Int
  nombreCiudad String
  almacenes      almacenes[]
  pais         pais      @relation(fields: [idPais], references: [idPais])
}

model pais {
  idPais  Int       @id @default(autoincrement())
  nombre  String
  ciudad  ciudad[]
  almacenes almacenes[]
}

model inventario {
  idInventario     Int            @id @default(autoincrement())
  idTypeComponents Int
  typeComponents   typeComponents @relation(fields: [idTypeComponents], references: [idTypeComponents])
  cantidad         Int
  sn               Int
  descripcion      String
  zona             String
  orden            String
  idEstado         Int
  estado           estado         @relation(fields: [idEstado], references: [idEstado])
  shelfLife        Int
  pn               Int
  idAlmacen        Int
  almacen          almacenes       @relation(fields: [idAlmacen], references: [idAlmacenes])
  idLote           Int
  lotes            lotes          @relation(fields: [idLote], references: [idLotes])
  idTipoAlmacen    Int
  tipoAlmacen      tipoAlmacen    @relation(fields: [idTipoAlmacen], references: [idTipoAlmacen])
  idATAs           Int
  ata              atas           @relation(fields: [idATAs], references: [IdAta])
}
