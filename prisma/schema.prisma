// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model inventario {
  idInventario     Int                @id @default(autoincrement())
  almacenes        almacenes          @relation(fields: [almacenesId], references: [idAlmacenes])
  almacenesId      Int
  zonas            zona               @relation(fields: [zonaId], references: [idZona])
  zonaId           Int
  pn               String
  descripcion      String
  idTipoComponente tipoComponente     @relation(fields: [tipoComponenteId], references: [idTipoComponente])
  tipoComponenteId Int
  sn               String
  cantidad         Int
  lote             String
  fabricante       String
  idEstado         estado             @relation(fields: [estadoId], references: [idEstado])
  estadoId         Int
  shelfLife        DateTime
  order            String
  idAta            atas               @relation(fields: [ataId], references: [IdAta])
  ataId            Int
  idHorasManuales  horasManuales      @relation(fields: [horasManualesId], references: [idHorasManuales])
  horasManualesId  Int
  aeronave         aeronave[]
  tallerReparacion tallerReparacion[]
  inspeccion       inspeccion[]
  historial        historial[]
  reporteShelfLife reporteShelfLife[]
}

model inspeccion {
  idInspeccion Int         @id @default(autoincrement())
  idInventario inventario  @relation(fields: [inventarioId], references: [idInventario])
  inventarioId Int
  historial    historial[]
}

model ordenCompra {
  idOrdenCompra Int         @id @default(autoincrement())
  ordenCompra   String
  Fecha         DateTime
  descripcion   String
  cantidad      Int
  pn            String
  sn            String
  historial     historial[]
}

model necesidadesTecnicas {
  idNecesidadesTecnicas Int    @id @default(autoincrement())
  pn                    String
  descripcion           String
  cantidad              Int
}

model aeronave {
  idAeronave   Int         @id @default(autoincrement())
  aeronave     String
  idInventario inventario  @relation(fields: [inventarioId], references: [idInventario])
  inventarioId Int
  historial    historial[]
}

model tallerReparacion {
  idTaller     Int         @id @default(autoincrement())
  taller       String
  idInventario inventario  @relation(fields: [inventarioId], references: [idInventario])
  inventarioId Int
  historial    historial[]
}

model horasManuales {
  idHorasManuales Int          @id @default(autoincrement())
  fecha           DateTime
  horas           Int
  ciclos          Int
  aterrizajes     Int
  inventario      inventario[]
}

model estado {
  idEstado   Int          @id @default(autoincrement())
  estado     String
  inventario inventario[]
}

model reporteShelfLife {
  idReporteShelfLife Int        @id @default(autoincrement())
  idInventario       inventario @relation(fields: [inventarioId], references: [idInventario])
  inventarioId       Int
  venceEn            Int
}

model historial {
  idHistorial      Int              @id @default(autoincrement())
  idInventario     inventario       @relation(fields: [inventarioId], references: [idInventario])
  inventarioId     Int
  idInspeccion     inspeccion       @relation(fields: [inspeccionId], references: [idInspeccion])
  inspeccionId     Int
  idOrdenCompra    ordenCompra      @relation(fields: [ordenCompraId], references: [idOrdenCompra])
  ordenCompraId    Int
  idAeronave       aeronave         @relation(fields: [aeronaveId], references: [idAeronave])
  aeronaveId       Int
  idTaller         tallerReparacion @relation(fields: [tallerId], references: [idTaller])
  tallerId         Int
  idUser           user             @relation(fields: [userId], references: [idUser])
  userId           Int
  idTipoMovimiento tipoMovimiento   @relation(fields: [tipoMovimientoId], references: [idTipoMovimiento])
  tipoMovimientoId Int
}

model tipoMovimiento {
  idTipoMovimiento Int         @id @default(autoincrement())
  tipoMovimiento   String
  historial        historial[]
}

model tipoComponente {
  idTipoComponente Int          @id @default(autoincrement())
  tipoComponente   String
  inventario       inventario[]
}

model atas {
  IdAta      Int          @id @default(autoincrement())
  CodigoAta  String       @db.VarChar(30)
  NombreATA  String       @db.VarChar(200)
  inventario inventario[]
}

model user {
  idUser       Int         @id @default(autoincrement())
  nameUser     String
  lastnameUser String
  rolId        Int
  active       Boolean
  password     String      @db.VarChar(50)
  roles        roles       @relation(fields: [rolId], references: [idRol], map: "User_rolId_fkey")
  historial    historial[]

  @@index([rolId], map: "User_rolId_fkey")
}

model almacenes {
  idAlmacenes Int          @id @default(autoincrement())
  nombre      String
  descripcion String
  pais        String
  ciudad      String
  estado      Int
  inventario  inventario[]
  zona        zona[]
}

model zona {
  idZona          Int          @id @default(autoincrement())
  zona            String
  descripcionZona String
  almacenId       Int
  almacen         almacenes    @relation(fields: [almacenId], references: [idAlmacenes])
  inventario      inventario[]
}

model roles {
  idRol Int    @id @default(autoincrement())
  rol   String
  // tecnico     
  // inspector   
  // almacenista
  // jefe de almacen 
  user  user[]
}
